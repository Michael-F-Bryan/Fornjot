#![allow(missing_docs)] // For the types generated by #[sabi_trait]

use abi_stable::{
    sabi_trait,
    std_types::{RBoxError, RResult},
};

use crate::{models::ModelMetadata, Shape};

/// A model.
#[sabi_trait]
pub trait Model: Send + Sync {
    /// Calculate this model's concrete geometry.
    fn shape(
        &self,
        ctx: crate::models::internal::Context<'_>,
    ) -> RResult<Shape, RBoxError>;

    /// Get metadata for the model.
    fn metadata(&self) -> ModelMetadata;
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn model_is_object_safe() {
        let _: &dyn Model;
    }
}
